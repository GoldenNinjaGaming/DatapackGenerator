import os

def generate(mode="s"):
    
    os.mkdir(name) # Creates Main Folder
    
    data = os.path.join(name, "data")
    
    os.mkdir(data) # Creates Data folder
    
    os.mkdir(data + f"\\{namespace}") # Creates Namespace
    
    os.mkdir(data + "\\minecraft") # Creates Minecraft namespace
    
    with open(f'{name}\pack.mcmeta', 'w') as pack:
        pack.write('{\n    "pack": {\n        "pack_format": 15,\n        "description": "Generated by Python"\n    }\n}\n')
    
    mynamespace = data + f"\\{namespace}"
      
    os.mkdir(mynamespace + "\\functions")
    os.mkdir(mynamespace + "\\loot_tables")
    os.mkdir(mynamespace + "\\structures")
    os.mkdir(mynamespace + "\\worldgen")
    os.mkdir(mynamespace + "\\advancements")
    os.mkdir(mynamespace + "\\recipes")
    os.mkdir(mynamespace + "\\tags")
    os.mkdir(mynamespace + "\\predicates")
    os.mkdir(mynamespace + "\\dimension")
    os.mkdir(mynamespace + "\\dimension_type")
    if mode = "a":
        os.mkdir(mynamespace + "\\worldgen\\noise_settings")
        os.mkdir(mynamespace + "\\worldgen\\biome")
        os.mkdir(mynamespace + "\\worldgen\\configured_carver")
        os.mkdir(mynamespace + "\\worldgen\\template_pool")
        os.mkdir(mynamespace + "\\worldgen\\structure")
        os.mkdir(mynamespace + "\\worldgen\\structure_set")
        os.mkdir(mynamespace + "\\worldgen\\processor_list")
    
        os.mkdir(mynamespace + "\\tags\\blocks") # Starting Generation Of All Tags Sub-Folders
        os.mkdir(mynamespace + "\\tags\\fluids")
        os.mkdir(mynamespace + "\\tags\\items")
        os.mkdir(mynamespace + "\\tags\\entity_types")
        os.mkdir(mynamespace + "\\tags\\game_events")
        os.mkdir(mynamespace + "\\tags\\worldgen")
        os.mkdir(mynamespace + "\\tags\\functions")
        os.mkdir(mynamespace + "\\tags\\loot_tables")
        os.mkdir(mynamespace + "\\tags\\structures")
        os.mkdir(mynamespace + "\\tags\\advancements")
        os.mkdir(mynamespace + "\\tags\\recipes")
        os.mkdir(mynamespace + "\\tags\\tags")
        os.mkdir(mynamespace + "\\tags\\predicates")
        os.mkdir(mynamespace + "\\tags\\dimension")
        
        os.mkdir(mynamespace + "\\tags\\worldgen\\noise_settings")
        os.mkdir(mynamespace + "\\tags\\worldgen\\biome")
        os.mkdir(mynamespace + "\\tags\\worldgen\\configured_carver")
        os.mkdir(mynamespace + "\\tags\\worldgen\\template_pool")
        os.mkdir(mynamespace + "\\tags\\worldgen\\structure")
        os.mkdir(mynamespace + "\\tags\\worldgen\\structure_set")
        os.mkdir(mynamespace + "\\tags\\worldgen\\processor_list")
    
    # Starting Minecraft Folder Generation
    
    minecraft = os.path.join(data, "minecraft")
    os.mkdir(minecraft)
    os.mkdir(minecraft + "advancements")
    os.mkdir(minecraft + "loot_tables")
    os.mkdir(minecraft + "recipes")
    os.mkdir(minecraft + "structures")
    os.mkdir(minecraft + "tags")
    
    # Making Sub-Folders...
    
    if mode = "a":
    
        os.mkdir(minecraft + "advancements" + "adventure")
        os.mkdir(minecraft + "advancements" + "end")
        os.mkdir(minecraft + "advancements" + "husbandry")
        os.mkdir(minecraft + "advancements" + "nether")
        os.mkdir(minecraft + "advancements" + "recipes")
        os.mkdir(minecraft + "advancements" + "story")
    
        os.mkdir(minecraft + "loot_tables" + "blicks")
        os.mkdir(minecraft + "loot_tables" + "chests")
        os.mkdir(minecraft + "loot_tables" + "entities")
        os.mkdir(minecraft + "loot_tables" + "gameplay")
    
        os.mkdir(minecraft + "structures" + "bastion")
        os.mkdir(minecraft + "structures" + "end_city")
        os.mkdir(minecraft + "structures" + "fossil")
        os.mkdir(minecraft + "structures" + "igloo")
        os.mkdir(minecraft + "structures" + "nether_fossils")
        os.mkdir(minecraft + "structures" + "pillager_outpost")
        os.mkdir(minecraft + "structures" + "ruined_portal")
        os.mkdir(minecraft + "structures" + "shipwreck")
        os.mkdir(minecraft + "structures" + "umderwater_ruin")
        os.mkdir(minecraft + "structures" + "village")
        os.mkdir(minecraft + "structures" + "woodland_mansion")
        
        os.mkdir(minecraft + "tags" + "blocks")
        os.mkdir(minecraft + "tags" + "entity_types")
        os.mkdir(minecraft + "tags" + "fluids")
        os.mkdir(minecraft + "tags" + "game_events")
        os.mkdir(minecraft + "tags" + "items")





name = input("Whats your datapack called? \n")
namespace = input("What is your namespace called? \n").lower()
m = input("Advanced Mide or Simple Mode? (S/A)")
go = input("Generate? Y/N \n")


if go.lower() == "y":
    generate(m.lower())
else:
    print("Generation Canceled.")